.row {

    &--t-padding {
        padding-top: 80px;
    }

    &__b-margin-until-medium {
        margin-bottom: 1rem;
    }

    @mixin atMedium {
        display: grid;
        grid-template-columns: repeat(12, 1fr);

        &--gutters {
            column-gap: 5.3%;
        }
    
        &--gutters-large {
            column-gap: 8%;
        }
    
        &--gutters-small {
            column-gap: 3.6%; 
        } 

        &__b-margin-until-medium {
            margin-bottom: 1rem;
        }

        &__b-margin-until-medium {
            margin-bottom: 0;
        }

        &__large-1 {
            grid-column: span 1;
        } 
        &__large-2 {
            grid-column: span 2;
        } 
        &__large-3 {
            grid-column: span 3;
        } 
        &__large-4 {
            grid-column: span 4;
        } 
        &__large-5 {
            grid-column: span 5;
        } 
        &__large-6 {
            grid-column: span 6;
        } 
        &__large-7 {
            grid-column: span 7;
        } 
        &__large-8 {
            grid-column: span 8;
        } 
        &__large-9 {
            grid-column: span 9;
        } 
        &__large-10 {
            grid-column: span 10;
        } 
        &__large-11 {
            grid-column: span 11;
        } 
        &__large-12 {
            grid-column: span 12;
        } 

        &__medium-4 {
            grid-column: span 4;
        }
    
        &__medium-6 {
            grid-column: span 6;
        }

        &__medium-8 {
            grid-column: span 8;
        }
    }

    @mixin atLarge {

        &__b-margin-until-large {
            margin-bottom: 1rem;
        }

        &__large-4 {
            grid-column: span 4;
        }

        &__large-4--larger {
            width: 37%;
        }
    
        &__large-6 {
            grid-column: span 6;
        }

        &__large-8 {
            grid-column: span 8;
        }
    }

    /* Begin Equal Height Rules */
    &--equal-height-at-medium {
        @mixin atMedium {
            display: flex; /* by itself this doesn't do anything. We need to tell each of the 3 testimonial columns to also use flexbox.*/
                           /* then instead of being floated to the left the contents of each column will flex to match the tallest element. */
        }

        & > div { /* this selects all descendents of parents with the &--equal-height-at-medium class with a div */
            float: none;
            display: flex;
        }
    }

    &--equal-height-at-large {
        @mixin atLarge {
           
        }

        & > div { /* this selects all descendents of parents with the &--equal-height-at-medium class with a div */
            display: flex;
        }
    }
}
